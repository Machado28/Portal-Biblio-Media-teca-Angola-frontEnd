{"version":3,"sources":["App.js","index.js"],"names":["App","useState","location","setLocation","handlePositionReceived","coords","latitude","longitude","useEffect","watchId","navigator","geolocation","watchPosition","clearWatch","ReactDOM","render","document","getElementById"],"mappings":"iJAEe,SAASA,IACtB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,SAASC,EAAT,GAA6C,IAAXC,EAAU,EAAVA,OACxBC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,UAElBJ,EAAY,CAAEG,WAAUC,cAG1B,OAZAC,qBAAU,WACR,IAAMC,EAAUC,UAAUC,YAAYC,cAAcR,GAEpD,OAAO,kBAAMM,UAAUC,YAAYE,WAAWJ,MAC7C,IASD,kDACaP,EAASI,SADtB,IACgC,uBADhC,cAEcJ,EAASK,aChB3BO,IAASC,OAAO,cAACf,EAAD,IAASgB,SAASC,eAAe,W","file":"static/js/main.4b017b0d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [location, setLocation] = useState({});\n\n  useEffect(() => {\n    const watchId = navigator.geolocation.watchPosition(handlePositionReceived);\n\n    return () => navigator.geolocation.clearWatch(watchId);\n  }, []);\n\n  function handlePositionReceived({ coords }) {\n    const { latitude, longitude } = coords;\n\n    setLocation({ latitude, longitude });\n  }\n\n  return (\n    <>\n      Latitude: {location.latitude} <br />\n      Longitude: {location.longitude}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}